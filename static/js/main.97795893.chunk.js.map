{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","api/movie.ts","components/FindMovie/FindMovie.tsx","App.tsx","index.tsx"],"names":["MovieCard","props","movie","className","src","Poster","alt","Title","Plot","MoviesList","movies","map","imdbID","BASE_URL","request","urlParam","a","fetch","response","ok","Error","status","statusText","json","FindMovie","addMovie","useState","titleQuery","setTitleQuery","setMovie","findMovie","foundMovie","console","error","onSubmit","event","preventDefault","Response","htmlFor","type","value","id","placeholder","onChange","target","classNames","onClick","addedMovies","Set","App","setMovies","newMovie","has","add","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.97795893.chunk.js","sourcesContent":["import React from 'react';\nimport './MovieCard.scss';\n\ntype Props = {\n  movie: Movie;\n};\n\nexport const MovieCard: React.FC<Props> = (props) => {\n  const { movie } = props;\n\n  return (\n    <div className=\"card\">\n      <div className=\"card-image\">\n        <figure className=\"image is-4by3\">\n          <img\n            src={movie.Poster}\n            alt=\"Film logo\"\n          />\n        </figure>\n      </div>\n      <div className=\"card-content\">\n        <div className=\"media\">\n          <div className=\"media-left\">\n            <figure className=\"image is-48x48\">\n              <img\n                src=\"images/imdb-logo.jpeg\"\n                alt=\"imdb\"\n              />\n            </figure>\n          </div>\n          <div className=\"media-content\">\n            <p className=\"title is-8\">{movie.Title}</p>\n          </div>\n        </div>\n\n        <div className=\"content\">\n          {movie.Plot}\n          <br />\n        </div>\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\ninterface Props {\n  movies: Movie[];\n}\n\nexport const MoviesList: React.FC<Props> = (props) => {\n  const { movies } = props;\n\n  return (\n    <div className=\"movies\">\n      {movies.map(movie => (\n        <MovieCard\n          key={movie.imdbID}\n          movie={movie}\n        />\n      ))}\n    </div>\n  );\n};\n","import { Movie } from '../types/Movie';\n\nconst OMDB_KEY = 'ddb8cda1';\nconst BASE_URL = `https://www.omdbapi.com/?i=tt3896198&apikey=${OMDB_KEY}&`;\n\nconst request = async <T>(urlParam: string): Promise<T> => {\n  const response = await fetch(`${BASE_URL}${urlParam}`);\n\n  if (!response.ok) {\n    throw new Error(`${response.status}: ${response.statusText}`);\n  }\n\n  return response.json();\n};\n\nexport const getMovie = (title: Movie['Title']) => request<Movie>(`t=${title}`);\n","import React, { useState } from 'react';\nimport classNames from 'classnames';\n\nimport { MovieCard } from '../MovieCard';\nimport { Movie } from '../../types/Movie';\nimport { getMovie } from '../../api/movie';\nimport './FindMovie.scss';\n\ntype Props = {\n  addMovie: (newMovie: Movie) => void;\n};\n\nexport const FindMovie: React.FC<Props> = ({ addMovie }) => {\n  const [titleQuery, setTitleQuery] = useState<Movie['Title']>('');\n  const [movie, setMovie] = useState<Movie | null>(null);\n\n  const findMovie = async () => {\n    try {\n      const foundMovie: Movie = await getMovie(titleQuery);\n\n      setMovie(foundMovie);\n    } catch (error) {\n      // eslint-disable-next-line no-console\n      console.error(\n        'An error has occurred when requesting movie from the server',\n      );\n    }\n  };\n\n  const handleSubmit = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n\n    if (movie?.Response === 'True') {\n      addMovie(movie);\n      setTitleQuery('');\n    }\n  };\n\n  return (\n    <>\n      <form className=\"find-movie\" onSubmit={handleSubmit}>\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n            <div className=\"control\">\n              <input\n                type=\"text\"\n                value={titleQuery}\n                id=\"movie-title\"\n                placeholder=\"Enter a title to search\"\n                onChange={(event) => setTitleQuery(event.target.value)}\n                className={classNames('input', {\n                  'is-danger': movie?.Response === 'False',\n                })}\n              />\n            </div>\n          </label>\n\n          {movie?.Response === 'False' && (\n            <p className=\"help is-danger\">\n              Can&apos;t find a movie with such a title\n            </p>\n          )}\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              type=\"button\"\n              className=\"button is-light\"\n              onClick={findMovie}\n            >\n              Find a movie\n            </button>\n          </div>\n\n          <div className=\"control\">\n            <button type=\"submit\" className=\"button is-primary\">\n              Add to the list\n            </button>\n          </div>\n        </div>\n      </form>\n\n      <div className=\"container\">\n        <h2 className=\"title\">Preview</h2>\n        {movie?.Response === 'True' && <MovieCard movie={movie} />}\n      </div>\n    </>\n  );\n};\n","import { useState } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\nimport { Movie } from './types/Movie';\n\nconst addedMovies = new Set<Movie['imdbID']>();\n\nexport const App: React.FC = () => {\n  const [movies, setMovies] = useState<Movie[]>([]);\n\n  const addMovie = (newMovie: Movie) => {\n    if (addedMovies.has(newMovie.imdbID)) {\n      return;\n    }\n\n    setMovies([...movies, newMovie]);\n    addedMovies.add(newMovie.imdbID);\n  };\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n      <div className=\"sidebar\">\n        <FindMovie addMovie={addMovie} />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}